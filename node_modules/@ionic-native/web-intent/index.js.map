{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/web-intent/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EACL,OAAO,EACP,eAAe,EACf,iBAAiB,EACjB,MAAM,EACP,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmDd,6BAAiB;;;;IAqF9C;;;;OAIG;;;;;;IAEH,iCAAa;;;;;cAAC,OAAsB;QAClC,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAEH,0CAAsB;;;;;cAAC,OAAsB;QAC3C,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAEH,4BAAQ;;;;;cAAC,KAAa;QACpB,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAEH,4BAAQ;;;;;cAAC,KAAa;QACpB,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAEH,0BAAM;;;;;QACJ,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAIH,4BAAQ;;;;;QACN,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAEH,iCAAa;;;;;cAAC,OAAsB;QAClC,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAEH,gCAAY;;;;;cAAC,OAAsB;QACjC,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAIH,6CAAyB;;;;;cAAC,OAAY;QACpC,MAAM,CAAC;KACR;IAED;;OAEG;;;;IAEH,+CAA2B;;;mBAAW;IAEtC;;OAEG;;;;IAEH,6BAAS;;;;QACP,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAEH,8BAAU;;;;;cAAC,EAAc;YAAZ,cAAU;QACrB,MAAM,CAAC;KACR;;gBAxMF,UAAU;;;QAMR,eAAe;;;;QAOf,eAAe;;;;QAOf,eAAe;;;;QAOf,eAAe;;;;QAOf,eAAe;;;;QAOf,eAAe;;;;QAOf,eAAe;;;;QAOf,eAAe;;;;QAOf,eAAe;;;;QAOf,eAAe;;;;QAOf,eAAe;;;;QAOf,eAAe;;;;QAQf,OAAO,EAAE;;;;kDAGT;;QAOA,OAAO,EAAE;;;;2DAGT;;QAOA,OAAO,EAAE;;;;6CAGT;;QAOA,OAAO,EAAE;;;;6CAGT;;QAMA,OAAO,EAAE;;;;2CAGT;;QAMA,OAAO,CAAC;YACP,UAAU,EAAE,IAAI;SACjB,CAAC;;;wCACU,UAAU;6CAErB;;QAOA,OAAO,EAAE;;;;kDAGT;;QAOA,OAAO,EAAE;;;;iDAGT;;QAOA,OAAO,CAAC;YACP,UAAU,EAAE,IAAI;SACjB,CAAC;;;wCACuC,UAAU;8DAElD;;QAKA,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;gEACc;;QAKrC,OAAO,EAAE;;;;8CAGT;;QAOA,OAAO,EAAE;;;;+CAGT;;;;;;;;;;;;;;;;;;;;;;;;;;;IAvMU,SAAS;QATrB,MAAM,CAAC;YACN,UAAU,EAAE,WAAW;YACvB,MAAM,EAAE,0CAA0C;YAClD,SAAS,EAAE,oBAAoB;YAC/B,IAAI,EACF,wEAAwE;YAC1E,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,SAAS,EAwMrB;oBAlQD;EA0D+B,iBAAiB;SAAnC,SAAS","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Cordova,\n  CordovaProperty,\n  IonicNativePlugin,\n  Plugin\n} from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface IntentOptions {\n  requestCode?: number;\n  type?: string;\n  package?: string;\n  url?: string;\n  extras?: object;\n  action?: string;\n  component?: {\n    package: string;\n    class: string;\n  };\n  flags?: number[];\n}\n\n/**\n * @name Web Intent\n * @description\n * This Plugin provides a general purpose shim layer for the Android intent mechanism, exposing various ways to handle sending and receiving intents.\n * @usage\n * For usage information please refer to the plugin's Github repo.\n *\n * ```typescript\n * import { WebIntent } from '@ionic-native/web-intent';\n *\n * constructor(private webIntent: WebIntent) { }\n *\n * ...\n *\n * const options = {\n *   action: this.webIntent.ACTION_VIEW,\n *   url: 'path/to/file',\n *   type: 'application/vnd.android.package-archive'\n * };\n *\n * this.webIntent.startActivity(options).then(onSuccess, onError);\n *\n * ```\n * @interfaces\n * IntentOptions\n */\n@Plugin({\n  pluginName: 'WebIntent',\n  plugin: 'com-darryncampbell-cordova-plugin-intent',\n  pluginRef: 'plugins.intentShim',\n  repo:\n    'https://github.com/darryncampbell/darryncampbell-cordova-plugin-intent',\n  platforms: ['Android']\n})\n@Injectable()\nexport class WebIntent extends IonicNativePlugin {\n  /**\n   * Convenience constant for actions\n   * @type {string}\n   */\n  @CordovaProperty\n  ACTION_SEND: string;\n\n  /**\n   * Convenience constant for actions\n   * @type {string}\n   */\n  @CordovaProperty\n  ACTION_VIEW: string;\n\n  /**\n   * Convenience constant for extras\n   * @type {string}\n   */\n  @CordovaProperty\n  EXTRA_TEXT: string;\n\n  /**\n   * Convenience constant for extras\n   * @type {string}\n   */\n  @CordovaProperty\n  EXTRA_SUBJECT: string;\n\n  /**\n   * Convenience constant for extras\n   * @type {string}\n   */\n  @CordovaProperty\n  EXTRA_STREAM: string;\n\n  /**\n   * Convenience constant for extras\n   * @type {string}\n   */\n  @CordovaProperty\n  EXTRA_EMAIL: string;\n\n  /**\n   * Convenience constant for actions\n   * @type {string}\n   */\n  @CordovaProperty\n  ACTION_CALL: string;\n\n  /**\n   * Convenience constant for actions\n   * @type {string}\n   */\n  @CordovaProperty\n  ACTION_SENDTO: string;\n\n  /**\n   * Convenience constant for actions\n   * @type {string}\n   */\n  @CordovaProperty\n  ACTION_GET_CONTENT: string;\n\n  /**\n   * Convenience constant for actions\n   * @type {string}\n   */\n  @CordovaProperty\n  ACTION_PICK: string;\n\n  /**\n   * Convenience constant for actions\n   * @type {string}\n   */\n  @CordovaProperty\n  ACTION_INSTALL_PACKAGE: string;\n\n  /**\n   * Convenience constant for actions\n   * @type {string}\n   */\n  @CordovaProperty\n  ACTION_UNINSTALL_PACKAGE: string;\n\n  /**\n   * Launches an Android intent\n   * @param options {IntentOptions}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  startActivity(options: IntentOptions): Promise<any> {\n    return;\n  }\n\n  /**\n   * Starts a new activity and return the result to the application\n   * @param options {IntentOptions}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  startActivityForResult(options: IntentOptions): Promise<any> {\n    return;\n  }\n\n  /**\n   * Checks if this app was invoked with specified extra\n   * @param extra {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  hasExtra(extra: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Gets the extra that this app was invoked with\n   * @param extra {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  getExtra(extra: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Gets the Uri the app was invoked with\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  getUri(): Promise<string> {\n    return;\n  }\n\n  /**\n   * Returns the content of the intent used whenever the application activity is launched\n   * @returns {Observable<string>}\n   */\n  @Cordova({\n    observable: true\n  })\n  onIntent(): Observable<string> {\n    return;\n  }\n\n  /**\n   * Sends a custom intent passing optional extras\n   * @param options {IntentOptions}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  sendBroadcast(options: IntentOptions): Promise<any> {\n    return;\n  }\n\n  /**\n   * Request that a given application service be started\n   * @param options {IntentOptions}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  startService(options: IntentOptions): Promise<any> {\n    return;\n  }\n\n  /**\n   * Registers a broadcast receiver for the specified filters\n   * @param filters {any}\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    observable: true\n  })\n  registerBroadcastReceiver(filters: any): Observable<any> {\n    return;\n  }\n\n  /**\n   * Unregisters a broadcast receiver\n   */\n  @Cordova({ sync: true })\n  unregisterBroadcastReceiver(): void {}\n\n  /**\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  getIntent(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Send a result back to the Intent that started this Activity.\n   * The data can be passed using 'extras'.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  sendResult({ extras: {} }): Promise<any> {\n    return;\n  }\n}\n"]}
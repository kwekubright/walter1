{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/badge/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;IA8B7C,yBAAiB;;;;IAC1C;;;OAGG;;;;;IAEH,qBAAK;;;;;QACH,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAEH,mBAAG;;;;;cAAC,WAAmB;QACrB,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAEH,mBAAG;;;;;QACD,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAEH,wBAAQ;;;;;cAAC,UAAkB;QACzB,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAEH,wBAAQ;;;;;cAAC,UAAkB;QACzB,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAEH,2BAAW;;;;;QACT,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAEH,6BAAa;;;;;QACX,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAEH,iCAAiB;;;;;QACf,MAAM,CAAC;KACR;;gBA3EF,UAAU;;;QAMR,OAAO,EAAE;;;;sCAGT;;QAOA,OAAO,EAAE;;;;oCAGT;;QAMA,OAAO,EAAE;;;;oCAGT;;QAOA,OAAO,EAAE;;;;yCAGT;;QAOA,OAAO,EAAE;;;;yCAGT;;QAMA,OAAO,EAAE;;;;4CAGT;;QAMA,OAAO,EAAE;;;;8CAGT;;QAMA,OAAO,EAAE;;;;kDAGT;;;;;;;;;;;;;;;;;;;;;IA1EU,KAAK;QARjB,MAAM,CAAC;YACN,UAAU,EAAE,OAAO;YACnB,MAAM,EAAE,sBAAsB;YAC9B,SAAS,EAAE,oCAAoC;YAC/C,IAAI,EAAE,gDAAgD;YACtD,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;SACpD,CAAC;OAEW,KAAK,EA2EjB;gBA1GD;EA+B2B,iBAAiB;SAA/B,KAAK","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @name Badge\n * @description\n * The essential purpose of badge numbers is to enable an application to inform its users that it has something for them — for example, unread messages — when the application isn’t running in the foreground.\n *\n * Requires Cordova plugin: cordova-plugin-badge. For more info, please see the [Badge plugin docs](https://github.com/katzer/cordova-plugin-badge).\n *\n * @usage\n * ```typescript\n * import { Badge } from '@ionic-native/badge';\n *\n * constructor(private badge: Badge) { }\n *\n * ...\n *\n * this.badge.set(10);\n * this.badge.increase(1);\n * this.badge.clear();\n * ```\n */\n@Plugin({\n  pluginName: 'Badge',\n  plugin: 'cordova-plugin-badge',\n  pluginRef: 'cordova.plugins.notification.badge',\n  repo: 'https://github.com/katzer/cordova-plugin-badge',\n  platforms: ['Android', 'Browser', 'iOS', 'Windows']\n})\n@Injectable()\nexport class Badge extends IonicNativePlugin {\n  /**\n   * Clear the badge of the app icon.\n   * @returns {Promise<boolean>}\n   */\n  @Cordova()\n  clear(): Promise<boolean> {\n    return;\n  }\n\n  /**\n   * Set the badge of the app icon.\n   * @param {number} badgeNumber  The new badge number.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  set(badgeNumber: number): Promise<any> {\n    return;\n  }\n\n  /**\n   * Get the badge of the app icon.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  get(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Increase the badge number.\n   * @param {number} increaseBy  Count to add to the current badge number\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  increase(increaseBy: number): Promise<any> {\n    return;\n  }\n\n  /**\n   * Decrease the badge number.\n   * @param {number} decreaseBy  Count to subtract from the current badge number\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  decrease(decreaseBy: number): Promise<any> {\n    return;\n  }\n\n  /**\n   * Check support to show badges.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  isSupported(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Determine if the app has permission to show badges.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  hasPermission(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Register permission to set badge notifications\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  requestPermission(): Promise<any> {\n    return;\n  }\n}\n"]}